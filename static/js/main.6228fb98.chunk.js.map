{"version":3,"sources":["state/ducks/router/index.ts","state/ducks/nominations/index.ts","api/index.ts","state/ducks/page/index.ts","state/ducks/searchResults/index.ts","state/ducks/loading/index.ts","state/ducks/error/index.ts","state/ducks/searchTerm/index.ts","state/store.ts","enums/RoutePaths.ts","components/SeachBar.tsx","components/SidePanel.tsx","components/table/Table.tsx","components/Button.tsx","components/table/Cell.tsx","components/table/Row.tsx","views/home/RenderRow.tsx","views/home/NominationInfo.tsx","components/Header.tsx","views/View.tsx","components/Card.tsx","components/MovieCard.tsx","components/PageIndicator.tsx","views/home/Home.tsx","views/Routes.tsx","reportWebVitals.ts","index.tsx"],"names":["history","createHashHistory","connectedRouter","connectRouter","addNomination","createAction","removeNomination","reducer","createReducer","builder","addCase","state","action","push","payload","filter","nomination","id","http","axios","create","adapter","cacheAdapterEnhancer","defaults","fetchData","searchTerm","pageNumber","get","changePage","createAsyncThunk","termPage","a","term","page","response","error","data","Response","currentPage","totalPages","fulfilled","numResults","totalResults","meta","arg","Math","ceil","formatResponse","imdbID","title","Title","year","Year","poster","Poster","Search","map","pending","rejected","active","message","Error","combineReducers","reducers","store","configureStore","devTools","middleware","getDefaultMiddleware","concat","routerMiddleware","preloadedState","serialized","localStorage","getItem","JSON","parse","e","console","loadFromLocal","subscribe","stringify","setItem","saveToLocal","getState","RoutePaths","SearchBar","className","onSubmit","placeholder","useState","setSearchTerm","clsx","value","onChange","target","onKeyDown","key","defaultProps","SidePanel","children","Table","renderHeader","renderRow","dispatch","useDispatch","removeRow","useCallback","tableHeader","row","Button","onClick","disabled","type","Cell","head","Row","RenderRow","NominationInfo","nominations","useSelector","useEffect","length","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","maxValue","text","styles","buildStyles","strokeLinecap","textSize","pathColor","textColor","trailColor","backgroundColor","Header","View","Card","MovieCard","movie","alreadySelected","every","nominationLength","alt","src","buttonClassName","PageIndicator","operation","Home","movies","searchResults","shallowEqual","isLoading","loading","activeError","errorMessage","debouncedSearch","debounce","searchPanel","loadingIndicator","errorIndicator","Routes","exact","path","Paths","HOME","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6228fb98.chunk.js","sourcesContent":["import { connectRouter } from 'connected-react-router';\nimport { createHashHistory } from 'history';\n\nexport const history = createHashHistory();\n\nconst connectedRouter = connectRouter(history);\n\nexport default connectedRouter;\n","import { createAction, createReducer } from '@reduxjs/toolkit';\nimport { MovieData } from '../searchResults';\n\nexport const ADD_NOMINATION = 'app/nominations/ADD_NOMINATION';\nexport const REMOVE_NOMINATION = 'app/nominations/REMOVE_NOMINATIONS';\n\nexport const addNomination = createAction<MovieData>(ADD_NOMINATION);\nexport const removeNomination = createAction<string>(REMOVE_NOMINATION);\n\nconst reducer = createReducer<MovieData[]>([], (builder) => builder\n\t.addCase(\n\t\taddNomination,\n\t\t(state, action) => {\n\t\t\tstate.push(action.payload);\n\t\t},\n\t)\n\t.addCase(\n\t\tremoveNomination,\n\t\t(state, action) => state.filter((nomination) => nomination.id !== action.payload),\n\t));\n\nexport default reducer;\n","import axios from 'axios';\nimport { cacheAdapterEnhancer } from 'axios-extensions';\n\nexport const http = axios.create({\n\tadapter: cacheAdapterEnhancer(axios.defaults.adapter as any),\n});\n\nconst fetchData = (searchTerm: string, pageNumber = 1) => http.get(`https://www.omdbapi.com/?apikey=bb0c08f4&s=${searchTerm}&page=${pageNumber}`);\n\nexport default fetchData;\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createReducer } from '@reduxjs/toolkit';\nimport fetchData from '../../../api';\n\nexport interface Page {\n\tcurrentPage: number;\n\ttotalPages: number;\n}\n\nexport interface SearchTermPage {\n\tterm: string;\n\tpage: number;\n}\n\nexport const CHANGE_PAGE = 'app/page/CHANGE_PAGE';\n\nexport const changePage = createAsyncThunk<any, SearchTermPage>(\n\tCHANGE_PAGE,\n\tasync (termPage: SearchTermPage) => {\n\t\tconst response = await fetchData(termPage.term, termPage.page);\n\t\treturn { error: response.data.Response === 'False', ...response.data };\n\t},\n);\n\nconst reducer = createReducer<Page>({ currentPage: 1, totalPages: 1 }, (builder) => builder\n\t.addCase(changePage.fulfilled, (state, action) => {\n\t\tconst numResults = action.payload.totalResults;\n\t\tif (numResults) {\n\t\t\treturn {\n\t\t\t\tcurrentPage: action.meta.arg.page,\n\t\t\t\ttotalPages: Math.ceil(numResults / 10),\n\t\t\t};\n\t\t}\n\t\treturn state;\n\t}));\n\nexport default reducer;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { createReducer, createAsyncThunk } from '@reduxjs/toolkit';\nimport { changePage } from '../page';\n\nexport interface MovieData {\n\tid: string;\n\ttitle: string;\n\tyear: string;\n\tposter: string;\n}\n\nconst formatResponse = ({\n\timdbID, Title, Year, Poster,\n}: any) => ({\n\tid: imdbID,\n\ttitle: Title,\n\tyear: Year,\n\tposter: Poster,\n});\n\nconst reducer = createReducer<MovieData[]>([], (builder) => builder\n\t.addCase(\n\t\tchangePage.fulfilled,\n\t\t(state, action) => {\n\t\t\tif (!action.payload.error) {\n\t\t\t\treturn action.payload.Search.map(formatResponse);\n\t\t\t}\n\t\t\treturn [];\n\t\t},\n\t));\n\nexport default reducer;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { changePage } from '../page';\n\nconst reducer = createReducer<boolean>(false, (builder) => builder\n\t.addCase(changePage.pending, () => true)\n\t.addCase(changePage.fulfilled, () => false)\n\t.addCase(changePage.rejected, () => false));\n\nexport default reducer;\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit';\nimport { changePage } from '../page';\n\nexport interface Error {\n\tactive: boolean;\n\tmessage: string;\n}\n\nconst reducer = createReducer<Error>({ active: false, message: '' }, (builder) => builder\n\t.addCase(changePage.pending, (state) => {\n\t\tstate.active = false;\n\t})\n\t.addCase(changePage.fulfilled, (state, action) => {\n\t\tif (action.payload.error) {\n\t\t\treturn { active: true, message: action.payload.Error as string };\n\t\t}\n\t\treturn { ...state, active: false };\n\t})\n\t.addCase(\n\t\tchangePage.rejected,\n\t\t(state, action) => ({ active: true, message: action.error.message as string }),\n\t));\n\nexport default reducer;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { changePage } from '../page';\n\nconst reducer = createReducer<string>('', (builder) => builder\n\t.addCase(changePage.fulfilled, (state, action) => action.meta.arg.term));\n\nexport default reducer;\n","import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport { routerMiddleware } from 'connected-react-router';\nimport * as reducers from './ducks';\nimport { MovieData } from './ducks/searchResults';\nimport { Page } from './ducks/page';\nimport { Error } from './ducks/error';\nimport { history } from './ducks/router';\n\nexport interface RootState {\n\trouter: any;\n\tnominations: MovieData[];\n\tsearchResults: MovieData[];\n\tloading: boolean;\n\terror: Error;\n\tpage: Page;\n\tsearchTerm: string;\n}\n\nconst saveToLocal = (state: RootState) => {\n\ttry {\n\t\tconst serialized = JSON.stringify(state);\n\t\tlocalStorage.setItem('appState', serialized);\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n};\n\nconst loadFromLocal = () => {\n\ttry {\n\t\tconst serialized = localStorage.getItem('appState');\n\t\tif (serialized === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn JSON.parse(serialized);\n\t} catch (e) {\n\t\tconsole.error(e);\n\t\treturn undefined;\n\t}\n};\n\nexport const reducer = combineReducers(reducers);\n\nconst store = configureStore({\n\treducer,\n\tdevTools: true,\n\tmiddleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(\n\t\trouterMiddleware(history),\n\t),\n\tpreloadedState: loadFromLocal(),\n});\n\nstore.subscribe(() => saveToLocal(store.getState()));\n\nexport default store;\n","enum RoutePaths {\n\tHOME = '/',\n}\n\nexport default RoutePaths;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { GoSearch } from 'react-icons/go';\n\ninterface SearchBarProps {\n\tclassName?: string;\n\tonSubmit: (searchTerm: string) => any;\n\tplaceholder?: string;\n}\n\nconst SearchBar = ({ className, onSubmit, placeholder }: SearchBarProps) => {\n\tconst [searchTerm, setSearchTerm] = useState('');\n\n\tconst onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tconst { value } = e.target;\n\t\tsetSearchTerm(value);\n\t\tif (value !== '') {\n\t\t\tonSubmit(value);\n\t\t}\n\t};\n\n\tconst onKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n\t\tif (e.key === 'Escape') {\n\t\t\tsetSearchTerm('');\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"relative\">\n\t\t\t<GoSearch className=\"absolute w-5 h-5 text-white inset-4\" />\n\t\t\t<input\n\t\t\t\tclassName={clsx(\n\t\t\t\t\tclassName,\n\t\t\t\t\t'text-white p-3 bg-trueGray-700 pl-12 rounded-3xl h-14 w-full outline-none focus:ring-2 focus:ring-blue-600',\n\t\t\t\t)}\n\t\t\t\tvalue={searchTerm}\n\t\t\t\tonChange={onChange}\n\t\t\t\tonKeyDown={onKeyDown}\n\t\t\t\tplaceholder={placeholder}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nSearchBar.defaultProps = {\n\tclassName: '',\n\tplaceholder: '',\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport clsx from 'clsx';\n\ninterface SidePanelProps {\n\tclassName?: string;\n\tchildren?: React.ReactNode;\n}\n\nconst SidePanel = ({ className, children }: SidePanelProps) => (\n\t<div className={clsx(className, 'bg-blue-600 w-1/3 md:max-w-xs lg:max-w-sm p-6 rounded-3xl shadow-xl max-h-full')}>\n\t\t{ children }\n\t</div>\n);\n\nSidePanel.defaultProps = {\n\tclassName: '',\n\tchildren: null,\n};\n\nexport default SidePanel;\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { removeNomination } from '../../state/ducks/nominations';\n\ninterface RenderRowProps<T> {\n\trow: T;\n\tremoveRow: (id: string) => any;\n}\n\ninterface TableProps<T> {\n\tdata: T[];\n\trenderHeader?: () => React.ReactNode;\n\trenderRow: (props: RenderRowProps<T>) => React.ReactNode;\n}\n\nconst Table = <T extends object>({ data, renderHeader, renderRow }: TableProps<T>) => {\n\tconst dispatch = useDispatch();\n\n\tconst removeRow = useCallback((id: string) => dispatch(removeNomination(id)), [dispatch]);\n\n\tconst tableHeader = (\n\t\t<thead>\n\t\t\t{ renderHeader }\n\t\t</thead>\n\t);\n\n\treturn (\n\t\t<table className=\"w-full table-auto\">\n\t\t\t{ renderHeader !== null ? tableHeader : null }\n\t\t\t<tbody>\n\t\t\t\t{ data.map((row) => renderRow({ row, removeRow })) }\n\t\t\t</tbody>\n\t\t</table>\n\t);\n};\n\nTable.defaultProps = {\n\trenderHeader: null,\n};\n\nexport default Table;\n","import React from 'react';\nimport clsx from 'clsx';\n\ninterface ButtonProps {\n\tonClick: (...a: any) => any;\n\tclassName?: string;\n\tchildren?: React.ReactNode;\n\tdisabled?: boolean;\n}\n\nconst Button = ({\n\tonClick, className, children, disabled,\n}: ButtonProps) => (\n\t<button\n\t\ttype=\"button\"\n\t\tonClick={onClick}\n\t\tclassName={clsx(\n\t\t\t'h-10 font-heading rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-600',\n\t\t\t{ 'cursor-not-allowed text-gray-400': disabled },\n\t\t\tclassName,\n\t\t)}\n\t\tdisabled={disabled}\n\t>\n\t\t{ children }\n\t</button>\n);\n\nButton.defaultProps = {\n\tclassName: '',\n\tchildren: null,\n\tdisabled: false,\n};\n\nexport default Button;\n","import React from 'react';\n\ninterface CellProps {\n\tclassName?: string;\n\tchildren: React.ReactNode;\n\thead?: boolean;\n}\n\nconst Cell = ({ className, children, head }: CellProps) => (head\n\t? <th className={`${className} px-6 py-4`}>{ children }</th>\n\t: <td className={`${className} px-6 py-4`}>{ children }</td>);\n\nCell.defaultProps = {\n\tclassName: '',\n\thead: false,\n};\n\nexport default Cell;\n","import React from 'react';\n\ninterface RowProps {\n\tclassName?: string;\n\tchildren: React.ReactNode;\n}\n\nconst Row = ({ className, children }: RowProps) => (\n\t<tr className={`${className} h-18 py-6 border-b-2 last:border-b-0`}>\n\t\t{ children }\n\t</tr>\n);\n\nRow.defaultProps = {\n\tclassName: '',\n};\n\nexport default Row;\n","import React from 'react';\nimport Button from '../../components/Button';\nimport Cell from '../../components/table/Cell';\nimport Row from '../../components/table/Row';\nimport { MovieData } from '../../state/ducks/searchResults';\n\ninterface RenderRowProps {\n\trow: MovieData,\n\tremoveRow: (id: string) => any;\n}\n\nconst RenderRow = ({ row, removeRow }: RenderRowProps) => (\n\t<Row key={row.id}>\n\t\t<Cell className=\"w-7/12 p-4\">{ row.title }</Cell>\n\t\t<Cell className=\"w-full\">\n\t\t\t<Button onClick={() => removeRow(row.id)} className=\"w-full bg-red-800\">\n\t\t\t\tRemove\n\t\t\t</Button>\n\t\t</Cell>\n\t</Row>\n);\n\nexport default RenderRow;\n","import React, { useEffect } from 'react';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { MovieData } from '../../state/ducks/searchResults';\nimport { RootState } from '../../state/store';\nimport Table from '../../components/table/Table';\nimport RenderRow from './RenderRow';\n\nconst NominationInfo = () => {\n\tconst nominations = useSelector<RootState, MovieData[]>((state) => state.nominations);\n\n\tuseEffect(() => {\n\t\tif (nominations.length === 5) {\n\t\t\ttoast.success('All nominations selected!', {\n\t\t\t\tposition: 'top-center',\n\t\t\t\tautoClose: 5000,\n\t\t\t\thideProgressBar: true,\n\t\t\t\tcloseOnClick: true,\n\t\t\t\tpauseOnHover: true,\n\t\t\t\tdraggable: true,\n\t\t\t});\n\t\t}\n\t}, [nominations]);\n\n\treturn (\n\t\t<div className=\"flex flex-col items-center text-white\">\n\t\t\t<h1 className=\"my-4 text-2xl font-title\">Your Nominations</h1>\n\t\t\t<div className=\"w-1/2 m-8 font-header\">\n\t\t\t\t<CircularProgressbar\n\t\t\t\t\tvalue={nominations.length}\n\t\t\t\t\tmaxValue={5}\n\t\t\t\t\ttext={`${nominations.length} / 5`}\n\t\t\t\t\tstyles={buildStyles({\n\t\t\t\t\t\tstrokeLinecap: 'round',\n\t\t\t\t\t\ttextSize: '16px',\n\t\t\t\t\t\tpathColor: 'white',\n\t\t\t\t\t\ttextColor: 'white',\n\t\t\t\t\t\ttrailColor: '#343434',\n\t\t\t\t\t\tbackgroundColor: '#3e98c7',\n\t\t\t\t\t})}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<Table data={nominations} renderRow={RenderRow} />\n\t\t</div>\n\t);\n};\n\nexport default NominationInfo;\n","import clsx from 'clsx';\nimport React from 'react';\n\ninterface HeaderProps {\n\tclassName?: string;\n\ttitle: string;\n}\n\nconst Header = ({ className, title }: HeaderProps) => (\n\t<div className={clsx(className, 'bg-black text-white shadow-lg h-12 md:h-16 flex items-center w-screen')}>\n\t\t<h1 className=\"ml-3 text-3xl font-header md:ml-6\">{ title }</h1>\n\t</div>\n);\n\nHeader.defaultProps = {\n\tclassName: '',\n};\n\nexport default Header;\n","import React from 'react';\nimport clsx from 'clsx';\nimport Header from '../components/Header';\n\ninterface ViewProps {\n\tclassName?: string;\n\tchildren?: React.ReactNode;\n}\n\nconst View = ({ className, children }: ViewProps) => (\n\t<div className=\"w-full h-full\">\n\t\t<Header title=\"The Shoppies\" />\n\t\t<div className={clsx(className, 'max-w-screen-xl m-auto')}>\n\t\t\t{ children }\n\t\t</div>\n\t</div>\n);\n\nView.defaultProps = {\n\tclassName: '',\n\tchildren: null,\n};\n\nexport default View;\n","import React from 'react';\n\ninterface CardProps {\n\tclassName?: string;\n\tchildren: React.ReactNode;\n}\n\nconst Card = ({ className, children }: CardProps) => (\n\t<div className={`${className} m-2 shadow-md rounded-lg`}>\n\t\t{ children }\n\t</div>\n);\n\nCard.defaultProps = {\n\tclassName: '',\n};\n\nexport default Card;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addNomination, removeNomination } from '../state/ducks/nominations';\nimport { MovieData } from '../state/ducks/searchResults';\nimport { RootState } from '../state/store';\nimport Button from './Button';\nimport Card from './Card';\n\ninterface MovieCardProps {\n\tmovie: MovieData;\n}\n\nconst MovieCard = ({ movie }: MovieCardProps) => {\n\tconst dispatch = useDispatch();\n\tconst alreadySelected = useSelector<RootState, boolean>(\n\t\t(state) => !state.nominations.every((nomination) => nomination.id !== movie.id),\n\t);\n\tconst nominationLength = useSelector<RootState, number>((state) => state.nominations.length);\n\n\tconst onClick = () => {\n\t\tif (alreadySelected) {\n\t\t\tdispatch(removeNomination(movie.id));\n\t\t} else if (nominationLength < 5) {\n\t\t\tdispatch(addNomination(movie));\n\t\t}\n\t};\n\n\treturn (\n\t\t<Card className=\"flex h-48 text-white bg-trueGray-900 flex-basis-2\">\n\t\t\t<div className=\"flex flex-col justify-around flex-auto p-3\">\n\t\t\t\t<h1 className=\"sm:text-lg lg:text-xl font-header\">{ movie.title }</h1>\n\t\t\t\t<span className=\"text-gray-600\">{ `(${movie.year})` }</span>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t'w-9/12 mx-auto',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'bg-green-600': !alreadySelected && nominationLength < 5,\n\t\t\t\t\t\t\t'bg-red-800': alreadySelected,\n\t\t\t\t\t\t\t'bg-gray-600': !alreadySelected && nominationLength >= 5,\n\t\t\t\t\t\t},\n\t\t\t\t\t)}\n\t\t\t\t\tdisabled={!alreadySelected && nominationLength >= 5}\n\t\t\t\t>\n\t\t\t\t\t{ alreadySelected ? 'Remove' : 'Nominate' }\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<img alt=\"Movie Poster\" src={movie.poster} className=\"flex-none object-cover w-4/12 rounded-r-lg md:w-5/12\" />\n\t\t</Card>\n\t);\n};\n\nexport default MovieCard;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changePage } from '../state/ducks/page';\nimport { RootState } from '../state/store';\n\nconst buttonClassName = 'hover: bg-black p-2.5 rounded-md';\n\nconst PageIndicator = () => {\n\tconst currentPage = useSelector<RootState, number>((state) => state.page.currentPage);\n\tconst totalPages = useSelector<RootState, number>((state) => state.page.totalPages);\n\tconst term = useSelector<RootState, string>((state) => state.searchTerm);\n\tconst dispatch = useDispatch();\n\n\tconst onClick = (operation: number) => () => dispatch(\n\t\tchangePage({ term, page: currentPage + operation }),\n\t);\n\n\treturn (\n\t\t<div className=\"flex items-center justify-center my-3 text-white\">\n\t\t\t<button className={buttonClassName} type=\"button\" onClick={onClick(-1)}>\n\t\t\t\tPrev\n\t\t\t</button>\n\t\t\t<span className=\"mx-8\">\n\t\t\t\t{ `${currentPage} / ${totalPages}`}\n\t\t\t</span>\n\t\t\t<button className={buttonClassName} type=\"button\" onClick={onClick(1)}>\n\t\t\t\tNext\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default PageIndicator;\n","/* eslint-disable no-nested-ternary */\nimport React from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { AiOutlineLoading } from 'react-icons/ai';\nimport debounce from 'lodash/debounce';\nimport SearchBar from '../../components/SeachBar';\nimport SidePanel from '../../components/SidePanel';\nimport NominationInfo from './NominationInfo';\nimport View from '../View';\nimport { MovieData } from '../../state/ducks/searchResults';\nimport { changePage } from '../../state/ducks/page';\nimport MovieCard from '../../components/MovieCard';\nimport { RootState } from '../../state/store';\nimport PageIndicator from '../../components/PageIndicator';\n\nconst Home = () => {\n\tconst dispatch = useDispatch();\n\tconst movies = useSelector<RootState, MovieData[]>((state) => state.searchResults, shallowEqual);\n\tconst isLoading = useSelector<RootState, boolean>((state) => state.loading);\n\tconst activeError = useSelector<RootState, boolean>((state) => state.error.active);\n\tconst errorMessage = useSelector<RootState, string>((state) => state.error.message);\n\tconst searchTerm = useSelector<RootState, string>((state) => state.searchTerm);\n\n\tconst onSearch = (term: string) => {\n\t\tif (term !== '') {\n\t\t\tdispatch(changePage({ term, page: 1 }));\n\t\t}\n\t};\n\n\tconst debouncedSearch = debounce(onSearch, 500);\n\n\tconst searchPanel = (\n\t\t<>\n\t\t\t<h1 className=\"m-auto mt-6 text-lg font-header\">\n\t\t\t\t{ 'Showing results for: ' }\n\t\t\t\t<b>{ searchTerm }</b>\n\t\t\t</h1>\n\t\t\t<div className=\"flex flex-wrap justify-center mt-5\">\n\t\t\t\t{ movies.map((movie) => <MovieCard key={movie.id} movie={movie} />) }\n\t\t\t</div>\n\t\t\t{ movies.length ? <PageIndicator /> : null }\n\t\t</>\n\t);\n\n\tconst loadingIndicator = (\n\t\t<AiOutlineLoading className=\"w-1/4 p-8 m-auto h-1/4 animate-spin\" />\n\t);\n\n\tconst errorIndicator = (\n\t\t<h1 className=\"mt-8 text-center\">{ errorMessage }</h1>\n\t);\n\n\treturn (\n\t\t<View className=\"flex flex-wrap items-start p-4 text-white lg:flex-nowrap\">\n\t\t\t<SidePanel className=\"flex-auto mb-5 lg:flex-none lg-mb-0\">\n\t\t\t\t<NominationInfo />\n\t\t\t</SidePanel>\n\t\t\t<div className=\"flex flex-col justify-center flex-auto lg:ml-5\">\n\t\t\t\t<SearchBar onSubmit={debouncedSearch} placeholder=\"Search for Movies\" />\n\t\t\t\t{ activeError ? errorIndicator : (isLoading ? loadingIndicator : searchPanel) }\n\t\t\t</div>\n\t\t</View>\n\t);\n};\n\nexport default Home;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Paths from '../enums/RoutePaths';\nimport Home from './home/Home';\n\nconst Routes = () => (\n\t<Switch>\n\t\t<Route exact path={Paths.HOME} component={Home} />\n\t</Switch>\n);\n\nexport default Routes;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({\n\t\t\tgetCLS, getFID, getFCP, getLCP, getTTFB,\n\t\t}) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { ToastContainer } from 'react-toastify';\nimport { history } from './state/ducks/router';\nimport store from './state/store';\nimport Routes from './views/Routes';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport 'react-circular-progressbar/dist/styles.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<ConnectedRouter history={history}>\n\t\t\t\t<ToastContainer />\n\t\t\t\t<Routes />\n\t\t\t</ConnectedRouter>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}